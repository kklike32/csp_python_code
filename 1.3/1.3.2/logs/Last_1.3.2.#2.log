# IPython log file

import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import numpy as np
a = np.random.randn(10000)
plt.hist(a)
#[Out]# (array([   17.,   154.,   702.,  1837.,  2859.,  2557.,  1363.,   430.,
#[Out]#           68.,    13.]), array([-3.6194429 , -2.86965512, -2.11986733, -1.37007955, -0.62029177,
#[Out]#         0.12949601,  0.87928379,  1.62907157,  2.37885935,  3.12864713,
#[Out]#         3.87843491]), <a list of 10 Patch objects>)
plt.savefig('1.3.2/Histogram)
plt.savefig('1.3.2/Histogram')
%logstart -ort 1.3.2/logs/Last_1.3.2.#.log
# Keenan Kalra 1.3.2 IPython log
5 + 3
#[Out]# 8
8/2
#[Out]# 4
8/2.0
#[Out]# 4.0
8.0/2
#[Out]# 4.0
#8.Assignment
student_age = 16
a = 2
a
#[Out]# 2
a * 7 #Multiplication
#[Out]# 14
3 ** a
#[Out]# 9
23 ** 43
#[Out]# 35834136918934220777541995677272642015423987712183913488967L
abs(-7)
#[Out]# 7
%run 1.3.2/Last_1.3.2.py #runs your code from the editor
%run 1.3.2/Last_1.3.2.py #runs your code from the editor
%run 1.3.2/Kalra_1.3.2.py
%run 1.3.2/Kalra_1.3.2.py
%run 1.3.2/Kalra_1.3.2.py
%run 1.3.2/Kalra_1.3.2.py #runs the code from the editor
%logstop
%logstart -ort 1.3.2/logs/Last_1.3.2.1#.log
%logstop
%logstart -ort 1.3.2/logs/Last_1.3.2.#1.log
%run 1.3.2/Kalra_1.3.2.py #runs the code from the editor
 %run 1.3.2/Keenna_1.3.2.py
%run 1.3.2/Kalra_1.3.2.py #runs the code from the editor
a = add_tip(20,0.15)\
a
a = add_tip(20, 0.15)
a
#[Out]# 23.0
%logstop
# Thu, 06 Dec 2018 16:05:17
#Thursday log entry in class
# Thu, 06 Dec 2018 16:05:34
#NOTE: MY PREVIOUS LOGS ARE MESSED UP
# Thu, 06 Dec 2018 16:08:27
'''When you use the python code editor, you can type in multiple lines of code without worrying whether to run it every single time. You can wait and run it at the end'''
#[Out]# 'When you use the python code editor, you can type in multiple lines of code without worrying whether to run it every single time. You can wait and run it at the end'
# Thu, 06 Dec 2018 16:09:56
#Scratch extended the if block so it wraps around all the block inside
# Thu, 06 Dec 2018 16:12:50
'''When you define a function with def, you would use docstring to explain your work to your future self or someone else in case they forget or do not understand.'''
#[Out]# 'When you define a function with def, you would use docstring to explain your work to your future self or someone else in case they forget or do not understand.'
# Thu, 06 Dec 2018 16:14:56
'''Some advantages of destroying local variables once the block is done excecuting are it save up space in the python memory and you won't risk the variable being confused onfused with another variable which cause your program to break.'''
#[Out]# "Some advantages of destroying local variables once the block is done excecuting are it save up space in the python memory and you won't risk the variable being confused onfused with another variable which cause your program to break."
# Thu, 06 Dec 2018 16:16:31
'''A compiler would look like Google Translate. It gives you the translation after you type in the entire sentence/paragraph.'''
#[Out]# 'A compiler would look like Google Translate. It gives you the translation after you type in the entire sentence/paragraph.'
# Thu, 06 Dec 2018 16:17:25
a = add_tip(20,0.15)
# Thu, 06 Dec 2018 16:17:27
a
#[Out]# 23.0
# Thu, 06 Dec 2018 16:17:48
add_tip(30,0.15)
#[Out]# 34.5
# Thu, 06 Dec 2018 16:18:24
#17a
# Thu, 06 Dec 2018 16:20:47
hyp(3,4)
# Thu, 06 Dec 2018 16:21:17
hyp(3,4)
# Thu, 06 Dec 2018 16:22:38
hyp(3,4)
# Thu, 06 Dec 2018 16:23:31
a = hyp(3,4)
# Thu, 06 Dec 2018 16:26:14
mean(3,4,5)
# Thu, 06 Dec 2018 16:26:57
add_tip(30, 0.1)
#[Out]# 33.0
# Thu, 06 Dec 2018 16:31:28
hyp(3,4)
# Thu, 06 Dec 2018 16:32:03
add_tip(3,4)
#[Out]# 15
# Thu, 06 Dec 2018 16:32:57
add_tips(3,4)
# Thu, 06 Dec 2018 16:34:09
%run 1.3.2/Kalra_1.3.2.py
# Thu, 06 Dec 2018 16:34:15
hyp(3,4)
#[Out]# 5.0
# Thu, 06 Dec 2018 16:34:46
mean(490, 29041, 28913)
#[Out]# 19481.333333333332
# Thu, 06 Dec 2018 16:34:55
mean(2,4,5)
#[Out]# 3.6666666666666665
# Thu, 06 Dec 2018 16:36:59
%run 1.3.2/Kalra_1.3.2.py
# Thu, 06 Dec 2018 16:37:09
perimter(3,5)
# Thu, 06 Dec 2018 16:37:21
perimeter(3,5)
#[Out]# 16
# Thu, 06 Dec 2018 16:38:34
#Conclusion
# Thu, 06 Dec 2018 16:43:29
'''I would like to use python to find out which nfl players are playing the best and eest and should be used in my fantasy.'''
#[Out]# 'I would like to use python to find out which nfl players are playing the best and eest and should be used in my fantasy.'
# Thu, 06 Dec 2018 16:46:58
'''Some native types are int(integer), float(real number), boolean(True or False), and string(any character).'''
#[Out]# 'Some native types are int(integer), float(real number), boolean(True or False), and string(any character).'
# Thu, 06 Dec 2018 16:52:18
'''Some differences between the command line of the interpretive iPython session and the ythonditohere you edit a file on


%logstop

da
daad
clear
help
def
\ 
fdfd
'''
#[Out]# 'Some differences between the command line of the interpretive iPython session and the ythonditohere you edit a file on\n\n\n%logstop\n\nda\ndaad\nclear\nhelp\ndef\n\\ \nfdfd\n'
# Thu, 06 Dec 2018 16:52:51
%logstop
